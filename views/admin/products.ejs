<!DOCTYPE html>
<html lang="en">
  <head>
    <title>Admin - Users page</title>
    <link
      href="https://cdnjs.cloudflare.com/ajax/libs/bootstrap/5.3.0/css/bootstrap.min.css"
      rel="stylesheet"
    />
    <link
      rel="stylesheet"
      href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/css/all.min.css"
    />
    <link
      href="https://fonts.googleapis.com/css2?family=Playfair+Display:wght@400;700&family=Poppins:wght@300;400;500;600&display=swap"
      rel="stylesheet"
    />
    <link rel="stylesheet" href="/css/main.css" />
    <style>
      .sidebar {
        min-height: 100vh;
        background: linear-gradient(
          135deg,
          var(--primary-color),
          var(--secondary-color)
        );
      }
      .nav-link:hover {
        background-color: rgba(255, 255, 255, 0.1);
        border-radius: 5px;
      }
      .card {
        border: none;
        box-shadow: 0 0.15rem 1.75rem 0 rgba(33, 40, 50, 0.15);
      }
      .border-left-primary {
        border-left: 0.25rem solid #4e73df !important;
      }
      .border-left-success {
        border-left: 0.25rem solid #1cc88a !important;
      }
      .active-page {
        background-color: rgba(255, 255, 255, 0.2) !important;
        border-radius: 5px;
      }
    </style>
  </head>
  <body>
    <div class="container-fluid">
      <div class="row">
        <%- include('./partials/admin-sidebar') %>
        <main class="col-md-9 ms-sm-auto col-lg-10 px-md-4 py-4">
          <div class="page-content">
            <div
              class="d-flex justify-content-between flex-wrap flex-md-nowrap align-items-center pt-3 pb-2 mb-3 border-bottom"
            >
              <h1 class="h2">Product Management</h1>
              <div class="btn-toolbar mb-2 mb-md-0">
                <button
                  type="button"
                  class="btn btn-sm btn-primary"
                  data-bs-toggle="modal"
                  data-bs-target="#addProductModal"
                >
                  <i class="bi bi-plus"></i> Add New Product
                </button>
              </div>
            </div>

            <div class="card shadow mb-4">
              <div class="card-body">
                <div class="table-responsive">
                  <table
                    class="table table-bordered"
                    id="productsTable"
                    width="100%"
                    cellspacing="0"
                  >
                    <thead>
                      <tr>
                        <th>No.</th>
                        <th>Name</th>
                        <th>Brand</th>
                        <th>Price</th>
                        <th>Stock</th>
                        <th>Category</th>
                        <th>Actions</th>
                      </tr>
                    </thead>
                    <tbody id="productsTableBody">
                      <% products.forEach((product, index) => { %>
                      <tr>
                        <td><%= index + 1 %></td>
                        <td><%= product.name %></td>
                        <td><%= product.brand %></td>
                        <td>$<%= product.price.toFixed(2) %></td>
                        <td><%= product.stock %></td>
                        <td>
                          <span class="badge bg-info text-dark"
                            ><%= product.category %></span
                          >
                        </td>
                        <td>
                          <button
                            class="btn btn-sm btn-outline-primary me-1 edit-product"
                            data-productId="<%= product._id %>"
                          >
                            <i class="fas fa-edit"></i>
                          </button>
                          <button
                            class="btn btn-sm btn-outline-danger delete-product"
                            data-productId="<%= product._id %>"
                          >
                            <i class="fas fa-trash"></i>
                          </button>
                        </td>
                      </tr>
                      <% }) %>
                    </tbody>
                  </table>
                </div>
              </div>
            </div>
          </div>
        </main>
      </div>
    </div>

    <!-- Modal -->
    <div
      class="modal fade"
      id="addProductModal"
      tabindex="-1"
      aria-labelledby="addProductModalLabel"
      aria-hidden="true"
    >
      <div class="modal-dialog">
        <div class="modal-content">
          <div class="modal-header">
            <h5 class="modal-title" id="addProductModalLabel">
              Add New Pet Product
            </h5>
            <button
              type="button"
              class="btn-close"
              data-bs-dismiss="modal"
            ></button>
          </div>
          <div class="modal-body">
            <form id="addProductForm" enctype="multipart/form-data">
              <div class="mb-3">
                <label for="productName" class="form-label">Name</label>
                <input
                  type="text"
                  class="form-control"
                  id="productName"
                  name="name"
                  required
                />
              </div>
              <div class="mb-3">
                <label for="productBrand" class="form-label">Brand</label>
                <input
                  type="text"
                  class="form-control"
                  id="productBrand"
                  name="brand"
                />
              </div>
              <div class="mb-3">
                <label for="productPrice" class="form-label">Price ($)</label>
                <input
                  type="number"
                  class="form-control"
                  id="productPrice"
                  name="price"
                  step="0.01"
                  required
                />
              </div>
              <div class="mb-3">
                <label for="productStock" class="form-label">Stock</label>
                <input
                  type="number"
                  class="form-control"
                  id="productStock"
                  name="stock"
                  min="0"
                />
              </div>
              <div class="mb-3">
                <label for="productCategory" class="form-label">Category</label>
                <select
                  class="form-select"
                  id="productCategory"
                  name="category"
                  required
                >
                  <option selected disabled value="">Choose a category</option>
                  <option value="Food">Food</option>
                  <option value="Toys">Toys</option>
                  <option value="Accessories">Accessories</option>
                  <option value="Grooming">Grooming</option>
                  <option value="Medicine">Medicine</option>
                  <option value="Training">Training</option>
                  <option value="Bedding">Bedding</option>
                  <option value="Other">Other</option>
                </select>
              </div>
              <div class="mb-3">
                <label for="productDescription" class="form-label"
                  >Description</label
                >
                <textarea
                  class="form-control"
                  id="productDescription"
                  name="description"
                  rows="3"
                ></textarea>
              </div>
              <div class="mb-3">
                <label for="productImage" class="form-label">Image</label>
                <input
                  type="file"
                  class="form-control"
                  id="productImage"
                  name="image"
                  accept=".jpg,.jpeg,.png,.gif"
                />
              </div>
            </form>
          </div>
          <div class="modal-footer">
            <button
              type="button"
              class="btn btn-secondary"
              data-bs-dismiss="modal"
            >
              Close
            </button>
            <button
              type="submit"
              form="addProductForm"
              class="btn btn-primary"
              id="modalSubmitBtn"
            >
              Add Product
            </button>
          </div>
        </div>
      </div>
    </div>

    <script src="https://cdnjs.cloudflare.com/ajax/libs/bootstrap/5.3.0/js/bootstrap.bundle.min.js"></script>
    <script>
      document.addEventListener("DOMContentLoaded", () => {
        const addProductForm = document.getElementById("addProductForm");
        const modal = document.getElementById("addProductModal");
        const submitBtn = document.getElementById("modalSubmitBtn");

        // ===== DELETE PRODUCT =====
        document.querySelectorAll(".delete-product").forEach((btn) => {
          btn.addEventListener("click", async () => {
            const productId = btn.getAttribute("data-productId");
            if (!confirm("Are you sure you want to delete this product?"))
              return;

            try {
              const res = await fetch(`/api/pet-products/${productId}`, {
                method: "DELETE",
              });
              if (!res.ok) {
                const err = await res.json();
                alert("Error: " + (err.message || "Failed to delete product."));
                return;
              }
              alert("Product deleted successfully!");
              btn.closest("tr").remove();
            } catch (err) {
              console.error("Delete Error:", err);
              alert("An unexpected error occurred.");
            }
          });
        });

        // ===== OPEN EDIT PRODUCT =====
        document.querySelectorAll(".edit-product").forEach((btn) => {
          btn.addEventListener("click", async () => {
            const productId = btn.getAttribute("data-productId");

            try {
              const res = await fetch(`/api/pet-products/${productId}`);
              if (!res.ok) {
                alert("Failed to load product data.");
                return;
              }

              const product = await res.json();

              document.getElementById("productName").value = product.name;
              document.getElementById("productBrand").value =
                product.brand || "";
              document.getElementById("productPrice").value = product.price;
              document.getElementById("productStock").value = product.stock;
              document.getElementById("productCategory").value =
                product.category;
              document.getElementById("productDescription").value =
                product.description || "";

              modal.setAttribute("data-mode", "edit");
              modal.setAttribute("data-productId", product._id);
              document.getElementById("addProductModalLabel").textContent =
                "Edit Pet Product";
              submitBtn.textContent = "Save Changes";

              const modalInstance = new bootstrap.Modal(modal);
              modalInstance.show();
            } catch (err) {
              console.error("Edit Load Error:", err);
              alert("An unexpected error occurred.");
            }
          });
        });

        // ===== RESET MODAL FOR ADD =====
        modal.addEventListener("show.bs.modal", () => {
          const mode = modal.getAttribute("data-mode");
          if (mode !== "edit") {
            addProductForm.reset();
            modal.setAttribute("data-mode", "add");
            modal.removeAttribute("data-productId");
            document.getElementById("addProductModalLabel").textContent =
              "Add New Pet Product";
            submitBtn.textContent = "Add Product";
          }
        });

        // ===== HANDLE ADD / EDIT SUBMIT =====
        addProductForm.addEventListener("submit", async (e) => {
          e.preventDefault();

          const mode = modal.getAttribute("data-mode") || "add";
          const productId = modal.getAttribute("data-productId");
          const url =
            mode === "edit"
              ? `/api/pet-products/${productId}`
              : "/api/pet-products";
          const method = mode === "edit" ? "PUT" : "POST";

          const formData = new FormData(addProductForm);

          try {
            const res = await fetch(url, {
              method,
              body: formData,
            });

            if (!res.ok) {
              const err = await res.json();
              alert("Error: " + (err.message || "Request failed."));
              return;
            }

            alert(
              mode === "edit"
                ? "Product updated successfully!"
                : "Product added successfully!"
            );

            const modalInstance = bootstrap.Modal.getInstance(modal);
            modalInstance.hide();
            window.location.reload();
          } catch (err) {
            console.error("Submit Error:", err);
            alert("An unexpected error occurred.");
          }
        });
      });
    </script>
  </body>
</html>
